//////////////////////////////////////////////////////////////////////

#include "stdafx.h"

//////////////////////////////////////////////////////////////////////

class PixelShader::PixelShaderImpl
{
public:

	//////////////////////////////////////////////////////////////////////

	PixelShaderImpl(wchar const *name)
		: mPixelShader(null)
	{
		ID3DBlob *blob;
		DX(D3DReadFileToBlob(Format(L"%s.cso", name).c_str(), &blob));
		DX(D3DDevice->CreatePixelShader(blob->GetBufferPointer(), blob->GetBufferSize(), null, &mPixelShader));
	}

	//////////////////////////////////////////////////////////////////////

	~PixelShaderImpl()
	{
		::Release(mPixelShader);
	}

	//////////////////////////////////////////////////////////////////////

	void Activate()
	{
		D3DContext->PSSetShader(mPixelShader, 0, 0);
	}

	//////////////////////////////////////////////////////////////////////

private:

	ID3D11PixelShader *mPixelShader;
};

//////////////////////////////////////////////////////////////////////

PixelShader::PixelShader()
	: pImpl(null)
{
}

//////////////////////////////////////////////////////////////////////

PixelShader::~PixelShader()
{
	Delete(pImpl);
}

//////////////////////////////////////////////////////////////////////

PixelShader *PixelShader::Load(wchar const *filename)
{
	PixelShader *p = new PixelShader();
	p->pImpl = new PixelShaderImpl(filename);
	return p;
}

//////////////////////////////////////////////////////////////////////

void PixelShader::Activate()
{
	assert(pImpl != null);
	pImpl->Activate();
}

//////////////////////////////////////////////////////////////////////

